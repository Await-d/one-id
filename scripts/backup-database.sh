#!/bin/bash

#######################################################
# OneID Êï∞ÊçÆÂ∫ìÂ§á‰ªΩËÑöÊú¨
#######################################################
# ÂäüËÉΩÔºö
# - Ëá™Âä®Â§á‰ªΩ PostgreSQL Êï∞ÊçÆÂ∫ì
# - ÊîØÊåÅÂéãÁº©ÂíåÊó∂Èó¥Êà≥
# - Ëá™Âä®Ê∏ÖÁêÜÊóßÂ§á‰ªΩ
# - ÊîØÊåÅÊú¨Âú∞Âíå Docker ÁéØÂ¢É
#######################################################

set -e

# ÈÖçÁΩÆ
BACKUP_DIR="${BACKUP_DIR:-./backups}"
RETENTION_DAYS="${RETENTION_DAYS:-30}"
TIMESTAMP=$(date +%Y%m%d_%H%M%S)
DB_NAME="${DB_NAME:-oneid}"
DB_USER="${DB_USER:-oneid}"
DB_HOST="${DB_HOST:-localhost}"
DB_PORT="${DB_PORT:-5432}"
USE_DOCKER="${USE_DOCKER:-false}"
DOCKER_CONTAINER="${DOCKER_CONTAINER:-oneid-postgres-prod}"

# È¢úËâ≤ËæìÂá∫
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

echo -e "${GREEN}========================================${NC}"
echo -e "${GREEN}OneID Êï∞ÊçÆÂ∫ìÂ§á‰ªΩÂ∑•ÂÖ∑${NC}"
echo -e "${GREEN}========================================${NC}"
echo ""

# ÂàõÂª∫Â§á‰ªΩÁõÆÂΩï
mkdir -p "$BACKUP_DIR"

# Â§á‰ªΩÊñá‰ª∂Âêç
BACKUP_FILE="$BACKUP_DIR/oneid_backup_$TIMESTAMP.sql"
BACKUP_FILE_GZ="$BACKUP_FILE.gz"

echo -e "${YELLOW}üì¶ ÂºÄÂßãÂ§á‰ªΩÊï∞ÊçÆÂ∫ì...${NC}"
echo "Êï∞ÊçÆÂ∫ì: $DB_NAME"
echo "Êó∂Èó¥Êà≥: $TIMESTAMP"
echo "Â§á‰ªΩÊñá‰ª∂: $BACKUP_FILE_GZ"
echo ""

# ÊâßË°åÂ§á‰ªΩ
if [ "$USE_DOCKER" = "true" ]; then
    echo -e "${YELLOW}üê≥ ‰ΩøÁî® Docker ÂÆπÂô®Â§á‰ªΩ...${NC}"
    docker exec "$DOCKER_CONTAINER" pg_dump -U "$DB_USER" "$DB_NAME" > "$BACKUP_FILE"
else
    echo -e "${YELLOW}üíª ‰ΩøÁî®Êú¨Âú∞ PostgreSQL Â§á‰ªΩ...${NC}"
    PGPASSWORD="$DB_PASSWORD" pg_dump -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER" "$DB_NAME" > "$BACKUP_FILE"
fi

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úì Êï∞ÊçÆÂ∫ìÂØºÂá∫ÊàêÂäü${NC}"
    
    # ÂéãÁº©Â§á‰ªΩÊñá‰ª∂
    echo -e "${YELLOW}üì¶ ÂéãÁº©Â§á‰ªΩÊñá‰ª∂...${NC}"
    gzip "$BACKUP_FILE"
    
    if [ $? -eq 0 ]; then
        BACKUP_SIZE=$(du -h "$BACKUP_FILE_GZ" | cut -f1)
        echo -e "${GREEN}‚úì ÂéãÁº©ÂÆåÊàêÔºåÊñá‰ª∂Â§ßÂ∞è: $BACKUP_SIZE${NC}"
    else
        echo -e "${RED}‚úó ÂéãÁº©Â§±Ë¥•${NC}"
        exit 1
    fi
else
    echo -e "${RED}‚úó Êï∞ÊçÆÂ∫ìÂØºÂá∫Â§±Ë¥•${NC}"
    exit 1
fi

# Ê∏ÖÁêÜÊóßÂ§á‰ªΩ
echo ""
echo -e "${YELLOW}üßπ Ê∏ÖÁêÜ $RETENTION_DAYS Â§©ÂâçÁöÑÂ§á‰ªΩ...${NC}"
OLD_BACKUPS=$(find "$BACKUP_DIR" -name "oneid_backup_*.sql.gz" -type f -mtime +"$RETENTION_DAYS" 2>/dev/null || true)

if [ -n "$OLD_BACKUPS" ]; then
    echo "$OLD_BACKUPS" | while read -r file; do
        echo "Âà†Èô§: $file"
        rm -f "$file"
    done
    echo -e "${GREEN}‚úì Ê∏ÖÁêÜÂÆåÊàê${NC}"
else
    echo "Ê≤°ÊúâÈúÄË¶ÅÊ∏ÖÁêÜÁöÑÊóßÂ§á‰ªΩ"
fi

# ÊòæÁ§∫ÂΩìÂâçÂ§á‰ªΩÂàóË°®
echo ""
echo -e "${YELLOW}üìã ÂΩìÂâçÂ§á‰ªΩÂàóË°®Ôºö${NC}"
ls -lh "$BACKUP_DIR"/oneid_backup_*.sql.gz 2>/dev/null || echo "Êó†Â§á‰ªΩÊñá‰ª∂"

echo ""
echo -e "${GREEN}========================================${NC}"
echo -e "${GREEN}‚úì Â§á‰ªΩÂÆåÊàêÔºÅ${NC}"
echo -e "${GREEN}========================================${NC}"
echo "Â§á‰ªΩÊñá‰ª∂: $BACKUP_FILE_GZ"
echo ""

# ÊòæÁ§∫ÊÅ¢Â§çÂëΩ‰ª§
echo -e "${YELLOW}üìñ ÊÅ¢Â§çÂëΩ‰ª§Ôºö${NC}"
if [ "$USE_DOCKER" = "true" ]; then
    echo "  gunzip -c $BACKUP_FILE_GZ | docker exec -i $DOCKER_CONTAINER psql -U $DB_USER $DB_NAME"
else
    echo "  gunzip -c $BACKUP_FILE_GZ | PGPASSWORD=\$DB_PASSWORD psql -h $DB_HOST -p $DB_PORT -U $DB_USER $DB_NAME"
fi
echo ""

exit 0

