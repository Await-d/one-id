version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:16-alpine
    container_name: oneid-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: oneid
      POSTGRES_USER: oneid
      POSTGRES_PASSWORD: ${DB_PASSWORD:-oneid_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U oneid"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - oneid-network

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: oneid-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - oneid-network

  # OneID 应用 (Identity + AdminApi)
  oneid:
    image: await2719/oneid:latest
    container_name: oneid-app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # 数据库配置
      ConnectionStrings__Default: "Host=postgres;Port=5432;Database=oneid;Username=oneid;Password=${DB_PASSWORD:-oneid_password}"
      Persistence__Provider: Postgres

      # Redis 配置
      Redis__ConnectionString: "redis:6379,password=${REDIS_PASSWORD:-redis_password}"

      # 管理员账户配置
      Seed__Admin__Username: ${ADMIN_USERNAME:-admin}
      Seed__Admin__Password: ${ADMIN_PASSWORD:-Admin123!}
      Seed__Admin__Email: ${ADMIN_EMAIL:-admin@example.com}

      # OIDC 客户端配置
      Seed__Oidc__ClientId: spa.portal
      Seed__Oidc__ClientSecret: ${OIDC_CLIENT_SECRET:-secret}
      Seed__Oidc__RedirectUri: http://localhost/callback

      # 应用配置
      ASPNETCORE_ENVIRONMENT: Production
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    ports:
      - "80:5101"      # Identity Server (主入口)
      - "5102:5102"    # Admin API
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5101/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - oneid-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  oneid-network:
    driver: bridge
