name: PR Lint Check

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'frontend/**'
      - 'backend/**'
      - 'Dockerfile*'
      - 'docker-compose*.yml'
      - '.github/workflows/**'

jobs:
  frontend-lint:
    name: Frontend Lint
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.changed_files, 'frontend/')
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
          cache-dependency-path: 'frontend/*/pnpm-lock.yaml'

      - name: Install Dependencies (Login SPA)
        working-directory: frontend/login
        run: pnpm install --frozen-lockfile

      - name: Lint Login SPA
        working-directory: frontend/login
        run: |
          pnpm run lint || true
          pnpm run type-check || true

      - name: Build Login SPA
        working-directory: frontend/login
        run: pnpm run build

      - name: Install Dependencies (Admin Portal)
        working-directory: frontend/admin
        run: pnpm install --frozen-lockfile

      - name: Lint Admin Portal
        working-directory: frontend/admin
        run: |
          pnpm run lint || true
          pnpm run type-check || true

      - name: Build Admin Portal
        working-directory: frontend/admin
        run: pnpm run build

  backend-lint:
    name: Backend Lint
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.changed_files, 'backend/')
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore Dependencies
        working-directory: backend
        run: dotnet restore

      - name: Format Check
        working-directory: backend
        run: dotnet format --verify-no-changes --verbosity diagnostic || true

      - name: Build Solution
        working-directory: backend
        run: dotnet build --no-restore --configuration Release

      - name: Run Tests
        working-directory: backend
        run: dotnet test --no-build --configuration Release --verbosity normal

  docker-build:
    name: Docker Build Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Validate Dockerfile
        run: docker buildx build --platform linux/amd64 -f Dockerfile . --load

      - name: Validate docker-compose
        run: |
          docker compose -f docker-compose.yml config
          docker compose -f docker-compose.dev.yml config

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run Trivy Vulnerability Scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy Results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  pr-size-check:
    name: PR Size Check
    runs-on: ubuntu-latest
    steps:
      - name: Check PR Size
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const additions = pr.additions;
            const deletions = pr.deletions;
            const totalChanges = additions + deletions;

            console.log(`PR Changes: +${additions} -${deletions} = ${totalChanges} total`);

            if (totalChanges > 1000) {
              core.setFailed(`❌ PR 过大！总计 ${totalChanges} 行变更（建议 < 1000 行）`);
            } else if (totalChanges > 500) {
              core.warning(`⚠️ PR 较大：${totalChanges} 行变更（建议拆分）`);
            } else {
              core.info(`✅ PR 大小合理：${totalChanges} 行变更`);
            }

  conventional-commits:
    name: Conventional Commits Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate Commit Messages
        run: |
          commits=$(git log --format=%s origin/${{ github.base_ref }}..${{ github.head_ref }})
          echo "检查的提交信息："
          echo "$commits"

          invalid_commits=()
          while IFS= read -r commit; do
            if ! echo "$commit" | grep -qE '^(feat|fix|docs|style|refactor|test|chore|perf|ci|build|revert)(\(.+\))?: .+'; then
              invalid_commits+=("$commit")
            fi
          done <<< "$commits"

          if [ ${#invalid_commits[@]} -gt 0 ]; then
            echo "❌ 以下提交不符合 Conventional Commits 规范："
            printf '%s\n' "${invalid_commits[@]}"
            echo ""
            echo "正确格式: type(scope): description"
            echo "示例: feat(auth): 添加双因素认证"
            exit 1
          fi

          echo "✅ 所有提交符合 Conventional Commits 规范"

  dependencies-check:
    name: Dependencies Security Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Check .NET Dependencies
        working-directory: backend
        run: |
          dotnet list package --vulnerable --include-transitive || true

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Check Frontend Dependencies (Login)
        working-directory: frontend/login
        run: |
          pnpm install --frozen-lockfile
          pnpm audit --audit-level=high || true

      - name: Check Frontend Dependencies (Admin)
        working-directory: frontend/admin
        run: |
          pnpm install --frozen-lockfile
          pnpm audit --audit-level=high || true
